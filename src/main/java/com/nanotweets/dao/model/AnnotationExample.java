package com.nanotweets.dao.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AnnotationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    public AnnotationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOriginalTextIsNull() {
            addCriterion("original_text is null");
            return (Criteria) this;
        }

        public Criteria andOriginalTextIsNotNull() {
            addCriterion("original_text is not null");
            return (Criteria) this;
        }

        public Criteria andOriginalTextEqualTo(String value) {
            addCriterion("original_text =", value, "originalText");
            return (Criteria) this;
        }

        public Criteria andOriginalTextNotEqualTo(String value) {
            addCriterion("original_text <>", value, "originalText");
            return (Criteria) this;
        }

        public Criteria andOriginalTextGreaterThan(String value) {
            addCriterion("original_text >", value, "originalText");
            return (Criteria) this;
        }

        public Criteria andOriginalTextGreaterThanOrEqualTo(String value) {
            addCriterion("original_text >=", value, "originalText");
            return (Criteria) this;
        }

        public Criteria andOriginalTextLessThan(String value) {
            addCriterion("original_text <", value, "originalText");
            return (Criteria) this;
        }

        public Criteria andOriginalTextLessThanOrEqualTo(String value) {
            addCriterion("original_text <=", value, "originalText");
            return (Criteria) this;
        }

        public Criteria andOriginalTextLike(String value) {
            addCriterion("original_text like", value, "originalText");
            return (Criteria) this;
        }

        public Criteria andOriginalTextNotLike(String value) {
            addCriterion("original_text not like", value, "originalText");
            return (Criteria) this;
        }

        public Criteria andOriginalTextIn(List<String> values) {
            addCriterion("original_text in", values, "originalText");
            return (Criteria) this;
        }

        public Criteria andOriginalTextNotIn(List<String> values) {
            addCriterion("original_text not in", values, "originalText");
            return (Criteria) this;
        }

        public Criteria andOriginalTextBetween(String value1, String value2) {
            addCriterion("original_text between", value1, value2, "originalText");
            return (Criteria) this;
        }

        public Criteria andOriginalTextNotBetween(String value1, String value2) {
            addCriterion("original_text not between", value1, value2, "originalText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextIsNull() {
            addCriterion("annotated_text is null");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextIsNotNull() {
            addCriterion("annotated_text is not null");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextEqualTo(String value) {
            addCriterion("annotated_text =", value, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextNotEqualTo(String value) {
            addCriterion("annotated_text <>", value, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextGreaterThan(String value) {
            addCriterion("annotated_text >", value, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextGreaterThanOrEqualTo(String value) {
            addCriterion("annotated_text >=", value, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextLessThan(String value) {
            addCriterion("annotated_text <", value, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextLessThanOrEqualTo(String value) {
            addCriterion("annotated_text <=", value, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextLike(String value) {
            addCriterion("annotated_text like", value, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextNotLike(String value) {
            addCriterion("annotated_text not like", value, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextIn(List<String> values) {
            addCriterion("annotated_text in", values, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextNotIn(List<String> values) {
            addCriterion("annotated_text not in", values, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextBetween(String value1, String value2) {
            addCriterion("annotated_text between", value1, value2, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextNotBetween(String value1, String value2) {
            addCriterion("annotated_text not between", value1, value2, "annotatedText");
            return (Criteria) this;
        }

        public Criteria andDocumentIsNull() {
            addCriterion("document is null");
            return (Criteria) this;
        }

        public Criteria andDocumentIsNotNull() {
            addCriterion("document is not null");
            return (Criteria) this;
        }

        public Criteria andDocumentEqualTo(String value) {
            addCriterion("document =", value, "document");
            return (Criteria) this;
        }

        public Criteria andDocumentNotEqualTo(String value) {
            addCriterion("document <>", value, "document");
            return (Criteria) this;
        }

        public Criteria andDocumentGreaterThan(String value) {
            addCriterion("document >", value, "document");
            return (Criteria) this;
        }

        public Criteria andDocumentGreaterThanOrEqualTo(String value) {
            addCriterion("document >=", value, "document");
            return (Criteria) this;
        }

        public Criteria andDocumentLessThan(String value) {
            addCriterion("document <", value, "document");
            return (Criteria) this;
        }

        public Criteria andDocumentLessThanOrEqualTo(String value) {
            addCriterion("document <=", value, "document");
            return (Criteria) this;
        }

        public Criteria andDocumentLike(String value) {
            addCriterion("document like", value, "document");
            return (Criteria) this;
        }

        public Criteria andDocumentNotLike(String value) {
            addCriterion("document not like", value, "document");
            return (Criteria) this;
        }

        public Criteria andDocumentIn(List<String> values) {
            addCriterion("document in", values, "document");
            return (Criteria) this;
        }

        public Criteria andDocumentNotIn(List<String> values) {
            addCriterion("document not in", values, "document");
            return (Criteria) this;
        }

        public Criteria andDocumentBetween(String value1, String value2) {
            addCriterion("document between", value1, value2, "document");
            return (Criteria) this;
        }

        public Criteria andDocumentNotBetween(String value1, String value2) {
            addCriterion("document not between", value1, value2, "document");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreationIsNull() {
            addCriterion("creation is null");
            return (Criteria) this;
        }

        public Criteria andCreationIsNotNull() {
            addCriterion("creation is not null");
            return (Criteria) this;
        }

        public Criteria andCreationEqualTo(Date value) {
            addCriterionForJDBCDate("creation =", value, "creation");
            return (Criteria) this;
        }

        public Criteria andCreationNotEqualTo(Date value) {
            addCriterionForJDBCDate("creation <>", value, "creation");
            return (Criteria) this;
        }

        public Criteria andCreationGreaterThan(Date value) {
            addCriterionForJDBCDate("creation >", value, "creation");
            return (Criteria) this;
        }

        public Criteria andCreationGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("creation >=", value, "creation");
            return (Criteria) this;
        }

        public Criteria andCreationLessThan(Date value) {
            addCriterionForJDBCDate("creation <", value, "creation");
            return (Criteria) this;
        }

        public Criteria andCreationLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("creation <=", value, "creation");
            return (Criteria) this;
        }

        public Criteria andCreationIn(List<Date> values) {
            addCriterionForJDBCDate("creation in", values, "creation");
            return (Criteria) this;
        }

        public Criteria andCreationNotIn(List<Date> values) {
            addCriterionForJDBCDate("creation not in", values, "creation");
            return (Criteria) this;
        }

        public Criteria andCreationBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("creation between", value1, value2, "creation");
            return (Criteria) this;
        }

        public Criteria andCreationNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("creation not between", value1, value2, "creation");
            return (Criteria) this;
        }

        public Criteria andCompletedIsNull() {
            addCriterion("completed is null");
            return (Criteria) this;
        }

        public Criteria andCompletedIsNotNull() {
            addCriterion("completed is not null");
            return (Criteria) this;
        }

        public Criteria andCompletedEqualTo(Date value) {
            addCriterionForJDBCDate("completed =", value, "completed");
            return (Criteria) this;
        }

        public Criteria andCompletedNotEqualTo(Date value) {
            addCriterionForJDBCDate("completed <>", value, "completed");
            return (Criteria) this;
        }

        public Criteria andCompletedGreaterThan(Date value) {
            addCriterionForJDBCDate("completed >", value, "completed");
            return (Criteria) this;
        }

        public Criteria andCompletedGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("completed >=", value, "completed");
            return (Criteria) this;
        }

        public Criteria andCompletedLessThan(Date value) {
            addCriterionForJDBCDate("completed <", value, "completed");
            return (Criteria) this;
        }

        public Criteria andCompletedLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("completed <=", value, "completed");
            return (Criteria) this;
        }

        public Criteria andCompletedIn(List<Date> values) {
            addCriterionForJDBCDate("completed in", values, "completed");
            return (Criteria) this;
        }

        public Criteria andCompletedNotIn(List<Date> values) {
            addCriterionForJDBCDate("completed not in", values, "completed");
            return (Criteria) this;
        }

        public Criteria andCompletedBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("completed between", value1, value2, "completed");
            return (Criteria) this;
        }

        public Criteria andCompletedNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("completed not between", value1, value2, "completed");
            return (Criteria) this;
        }

        public Criteria andOriginalTextLikeInsensitive(String value) {
            addCriterion("upper(original_text) like", value.toUpperCase(), "originalText");
            return (Criteria) this;
        }

        public Criteria andAnnotatedTextLikeInsensitive(String value) {
            addCriterion("upper(annotated_text) like", value.toUpperCase(), "annotatedText");
            return (Criteria) this;
        }

        public Criteria andDocumentLikeInsensitive(String value) {
            addCriterion("upper(document) like", value.toUpperCase(), "document");
            return (Criteria) this;
        }

        public Criteria andStatusLikeInsensitive(String value) {
            addCriterion("upper(status) like", value.toUpperCase(), "status");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.annotation
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.annotation
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}